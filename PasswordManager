import json
import os
from cryptography.fernet import Fernet

class SimplePasswordManager:
    def __init__(self, key_file='key.key', password_file='passwords.json'):
        self.key_file = key_file
        self.password_file = password_file
        self.key = self.load_key()
        self.cipher = Fernet(self.key)
        self.passwords = self.load_passwords()

    def load_key(self):
        if os.path.exists(self.key_file):
            with open(self.key_file, 'rb') as file:
                return file.read()
        else:
            key = Fernet.generate_key()
            with open(self.key_file, 'wb') as file:
                file.write(key)
            return key

    def load_passwords(self):
        if os.path.exists(self.password_file):
            with open(self.password_file, 'r') as file:
                return json.load(file)
        else:
            return {}

    def save_passwords(self):
        with open(self.password_file, 'w') as file:
            json.dump(self.passwords, file)

    def add_password(self, category, password):
        encrypted_password = self.cipher.encrypt(password.encode()).decode()
        self.passwords[category] = encrypted_password
        self.save_passwords()

    def get_password(self, category):
        if category in self.passwords:
            encrypted_password = self.passwords[category]
            return self.cipher.decrypt(encrypted_password.encode()).decode()
        return None

def main():
    manager = SimplePasswordManager()

    while True:
        print("\nPassword Manager")
        print("1. Add a new password")
        print("2. Retrieve a password")
        print("3. Exit")
        choice = input("Choose an option: ")

        if choice == '1':
            category = input("Enter the category: ")
            password = input("Enter the password: ")
            manager.add_password(category, password)
            print(f"Password for {category} added successfully.")

        elif choice == '2':
            category = input("Enter the category: ")
            password = manager.get_password(category)
            if password:
                print(f"The password for {category} is: {password}")
            else:
                print(f"No password found for {category}.")

        elif choice == '3':
            print("Exiting...")
            break

        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
